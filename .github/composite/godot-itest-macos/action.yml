# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

name: godot
description: "Run Godot integration tests"

inputs:
  artifact-name:
    required: true
    description: "Name of the compiled Godot artifact to download"

  godot-binary:
    required: true
    description: "Filename of the Godot executable"

  godot-args:
    required: false
    default: ''
    description: "Command-line arguments passed to Godot"

  # Currently unused; could be removed entirely.
  godot-check-header:
    required: false
    default: 'false'
    description: "Should the job check against latest gdextension_interface.h, and warn on difference"

  godot-prebuilt-patch:
    required: false
    default: ''
    description: "If specified, sets the branch name of the godot4-prebuilt crate to this value"

  rust-toolchain:
    required: false
    default: 'stable'
    description: "Rust toolchain specifier (e.g. 'nightly')"

  rust-extra-args:
    required: false
    default: ''
    description: "Extra command line arguments for 'cargo build', e.g. features"

  rust-env-rustflags:
    required: false
    default: ''
    description: "Extra values for the RUSTFLAGS env var"

  rust-target:
    required: false
    default: ''
    description: "If provided, acts as an argument for '--target', and results in output files written to ./target/{target}"

  with-llvm:
    required: false
    default: ''
    description: "Set to 'true' if LLVM should be installed"

  workflow:
    required: true
    description: "Workflow name of the workflow that produced the artifact"


runs:
  using: "composite"
  steps:
    # Do not check out here, as this would overwrite (clean) the current directory and is already done by the parent workflow.

    - name: "Install Godot"
      uses: ./.github/composite/godot-install
      with:
        artifact-name: ${{ inputs.artifact-name }}
        godot-binary: ${{ inputs.godot-binary }}
        workflow: ${{ inputs.workflow }}

    # The chmod seems still necessary, although applied before uploading artifact. Possibly modes are not preserved.
    # The `| xargs` pattern trims the output, since printed version may contain extra newline, which causes problems in env vars.
    - name: "Inspect Godot version"
      run: |
        godotVer=$($GODOT4_BIN --version | xargs || true)
        gitSha=$(echo $godotVer | sed -E "s/.+custom_build\.//")
        echo "GODOT_BUILT_FROM=_Built from [\`$godotVer\`](https://github.com/godotengine/godot/commit/$gitSha)._" >> $GITHUB_ENV
      shell: bash

    - name: "Install Rust"
      uses: ./.github/composite/rust
      with:
        rust: ${{ inputs.rust-toolchain }}
        with-llvm: ${{ inputs.with-llvm }}

    - name: "Build gdext (macOS version test)"
      working-directory: gdext
      run: |
        cargo build -p godot-ffi -vv
      shell: bash
